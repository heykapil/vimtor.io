import Page from "../components/page/page";
import Emoji from "../components/emoji";
import SectionCTA from "../components/section/section-cta";
import PageTitle from "../components/page/page-title";
import PageSubtitle from "../components/page/page-subtitle";
import { Document, Page as Slide, StyleSheet, Text, View } from "@react-pdf/renderer";
import dynamic from "next/dynamic";
import graphCms from "../utils/graph-cms";
import { ProjectSummaryFragment } from "../utils/schema";
import Link from "../components/link";
import { useState } from "react";

const PDFButtons = dynamic(() => import("../components/pdf-buttons"), {
    ssr: false,
    loading: () => {
        return <div className="h-32"></div>;
    },
});

const styles = StyleSheet.create({
    page: {
        backgroundColor: "#E4E4E4",
    },
    section: {
        margin: 10,
        padding: 10,
        flexGrow: 1,
    },
});

interface ResumeProps {
    projects: Array<ProjectSummaryFragment>;
}

export default function Resume({ projects }: ResumeProps) {
    const [showDocument, setShowDocument] = useState(true);

    const MyDocument = () => (
        <Document>
            <Slide size="A4" style={styles.page}>
                {projects?.map((project) => (
                    <View key={project.slug} style={styles.section}>
                        <Text>{project.name}</Text>
                    </View>
                ))}
            </Slide>
        </Document>
    );

    return (
        <Page title="Resume" description="Send me an email so we can start a conversation">
            <PageTitle>
                Resume <Emoji label="paper document" icon="ðŸ“„" />
            </PageTitle>
            <PageSubtitle>Feel free to download my resume if like the old times</PageSubtitle>
            <PDFButtons document={<MyDocument />} fileName="Victor Navarro Resume" />
            <SectionCTA className="text-center">
                The PDF is autogenerated from the contents of this website.
                <br />
                Learn how it is done <Link href="/">here</Link>
            </SectionCTA>
        </Page>
    );
}

export async function getStaticProps() {
    const { projects } = await graphCms.getProjectsPage();
    return {
        props: {
            projects,
        },
    };
}
